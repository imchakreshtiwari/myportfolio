{"version":3,"sources":["img/profilepic.jpg","components/NavItem.js","components/NavBar.js","components/Social.js","contents/Home.js","components/WideCard.js","contents/Education.js","contents/About.js","contents/Skill.js","contents/Contact.js","contents/experience.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navitem","to","this","props","tolink","onClick","activec","bind","item","Component","NavBar","activeitem","x","console","log","state","NavItemId","NavItemActive","Social","className","href","Home","src","profilepic","alt","text","speed","eraseDelay","Widecard","title","where","from","percent","Education","About","Skills","myskills","map","value","Contact","Experience","App","exact","path","Skill","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d5ae7212.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepic.0f8c09cd.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nclass Navitem extends Component {\r\nrender() {\r\nreturn (\r\n  <li>\r\n    <Link\r\n      to={this.props.tolink}\r\n      onClick={this.props.activec.bind(this, this.props.item)}\r\n    >\r\n      {this.props.item}\r\n    </Link>\r\n  </li>\r\n);\r\n}\r\n}\r\nexport default Navitem","import React, { Component } from \"react\";\r\nimport Navitem from \"./NavItem\";\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      NavItemActive: \"\",\r\n      NavItemId:1\r\n    };\r\n  }\r\n\r\n  activeitem = x => {\r\n    console.log(this.state.NavItemId);\r\n  };\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <ul>\r\n          <Navitem item=\"Home\" tolink=\"/\" activec={this.activeitem}></Navitem>\r\n          <Navitem\r\n            item=\"About\"\r\n            tolink=\"/about\"\r\n            activec={this.activeitem}\r\n          ></Navitem>\r\n          <Navitem\r\n            item=\"Education\"\r\n            tolink=\"/education\"\r\n            activec={this.activeitem}\r\n          ></Navitem>\r\n          <Navitem\r\n            item=\"Skills\"\r\n            tolink=\"/skills\"\r\n            activec={this.activeitem}\r\n          ></Navitem>\r\n           <Navitem\r\n            item=\"Experience\"\r\n            tolink=\"/experience\"\r\n            activec={this.activeitem}\r\n          ></Navitem>\r\n          <Navitem\r\n            item=\"Contact\"\r\n            tolink=\"/contact\"\r\n            activec={this.activeitem}\r\n          ></Navitem>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nclass Social extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"social\">\r\n              \r\n                <a href=\"https://www.linkedin.com/in/imchakreshtiwari/\"><i className=\"fab fa-codepen\"></i></a>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Social;","import React, { Component } from 'react';\r\nimport profilepic from '../img/profilepic.jpg';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\nimport Social from '../components/Social';\r\nclass Home extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className='condiv home'>\r\n                <img src={profilepic} className=\"profilepic\" alt=\"Profile Pic\"></img><br />\r\n                <ReactTypingEffect className=\"typingeffect\" text={['I am Chakresh Tiwari','I am a Full Stack  developer']} speed={100} eraseDelay={700}/> \r\n           <Social />\r\n            </div>\r\n          );\r\n    }\r\n}\r\nexport default Home;","import React, { Component } from \"react\";\r\nclass Widecard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"widecard\">\r\n        <div className=\"compdet\">\r\n          <h3>{this.props.title}</h3>\r\n          <h4 className=\"secondtext\">{this.props.where}</h4>\r\n          <h4 className=\"secondtext\">\r\n            {this.props.from} - {this.props.to}\r\n          </h4>\r\n          <h4 className=\"secondtext\">{this.props.percent}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Widecard;\r\n","import React, { Component } from 'react';\r\nimport Widecard from '../components/WideCard';\r\nclass Education extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"condiv\">\r\n        <h1 className=\"subtopic\">My Education</h1>\r\n        <Widecard\r\n          title=\"B.Tech (Computer Science & Engineering)\"\r\n          where=\"Institute of Engineering & Technology \"\r\n          from=\"July 2014\"\r\n          to=\"2018\"\r\n          percent = \"Percent - 79.8%\"\r\n        />\r\n        <Widecard\r\n          title=\"SSLC | HSC\"\r\n          where=\"MDBL INTER College (State Board)\"\r\n          from=\"2011\"\r\n          to=\"2013\"\r\n          percent = \"Percent - 84.2%\"\r\n       / >\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Education;","import React, { Component } from \"react\";\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"condiv\">\r\n        <h1 className=\"subtopic\">About Me</h1>\r\n        <h4>Hey there,</h4>\r\n        <h1>I'm Chakresh Tiwari</h1>\r\n        <h3>\r\n          Full Stack <u>Developer</u>\r\n        </h3>\r\n        <br></br>\r\n        <p>\r\n          I have  knowledge of Java with Spring Boot for Backend and React JS for frontend. I love to\r\n          learn new technologies and solve problems.\r\n        </p>\r\n        <p>\r\n        I have experience in building apps with test-driven development and using best practices<br></br>\r\n        I love Stackoverflow and Medium they are the best place for me to invest time.<br></br>\r\n        I believe I haven't achieved the best of my career yet, So working hard to reach the summit. \r\n        and be able to learn as much as possible and use that for the betterment of products that I am developing.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nclass Skills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myskills: [\r\n        \"JAVA\",\r\n        \"SPRING\",\r\n        \"SPRING BOOT\",\r\n        \"HIBERNATE\",\r\n        \"HTML\",\r\n        \"JS (Basic)\",\r\n        \"REACT JS\",\r\n        \"HEROKU\",\r\n        \"AWS\",\r\n        \"JIRA\",\r\n        \"GIT\",\r\n      ],\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"condiv skills\">\r\n        <h1 className=\"subtopic\">My Skills</h1>\r\n        <ul>\r\n          {this.state.myskills.map((value) => {\r\n            return <li>{value}</li>;\r\n          })}\r\n        </ul>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skills;\r\n","import React, { Component } from \"react\";\r\nimport Social from \"../components/Social\";\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"condiv\">\r\n        <h1 className=\"subtopic\">Contact Me</h1>\r\n        <h3>Email : chakresh0108@gmail.com</h3>\r\n        <h3>Contact No : 8410533693</h3> <br />\r\n        <a href=\"https://www.linkedin.com/in/imchakreshtiwari/\">Linkedin</a>  <br />\r\n        <a href=\"https://stackoverflow.com/users/11423630/shubham\">StackOverflow</a> <br />\r\n        <a href=\"https://github.com/imchakreshtiwari/\">Github</a> <br />\r\n        <a href=\"https://drive.google.com/file/d/1Lm5_6BPQWTLnfutHCn_DNUms-gR5cTPO/view?usp=sharing\">Resume Link</a>\r\n        <Social />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Widecard from '../components/WideCard';\r\nclass Experience extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"condiv\">\r\n        <h1 className=\"subtopic\">Experience</h1>\r\n        <Widecard\r\n          title=\"Acis India Development Centre\"\r\n          where=\"Bengaluru\"\r\n          from=\"June 2019\"\r\n          to=\"Present\"\r\n          percent=\"I am Using Spring Boot and React for developing Plugins for JIRA cloud.\"\r\n        />\r\n        <Widecard\r\n          title=\"Imageinfo Systems\"\r\n          where=\"Delhi \"\r\n          from=\"July 2018\"\r\n          to=\"June 2019\"\r\n          percent=\"I have Used Java for developing Banking Softwares.\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/NavBar\";\nimport Home from './contents/Home';\nimport Education from './contents/Education';\nimport About  from './contents/About';\nimport Skills from './contents/Skill';\nimport Contact from './contents/Contact';\nimport Experience from \"./contents/experience\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n      \n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/education\">\n        <Education />\n      </Route>\n      <Route path=\"/skills\">\n        <Skills />\n      </Route>\n      <Route path=\"/experience\">\n        <Experience />\n      </Route>\n      <Route path=\"/contact\">\n        <Contact />\n      </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}